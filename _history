{"entries":[{"timestamp":1752605750738,"editorVersion":"7.0.61","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"l\"><"],[-1,"variables></variables><"],[0,"bloc"]],"start1":52,"start2":52,"length1":31,"length2":8},{"diffs":[[0,"art\""],[-1," id=\"oqXE/oX.xRRFic=V2c1/\""],[0," x=\""]],"start1":77,"start2":77,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"J#m?g}EB5x0Lbp3Uxl@w\""],[0," x=\""]],"start1":128,"start2":128,"length1":34,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":236,"start2":236,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1752605750737,"editorVersion":"7.0.61","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"basicBlockchain wallet micro: bit\nbasic.forever(function() {\n    \n})\nsvg.sim { box - sizing: border - box; width: 100 %; height: 100 %; display: block; } svg.sim.grayscale { -moz - filter: grayscale(1); -webkit - filter: grayscale(1); filter: grayscale(1); } .sim - button - group { cursor: pointer; } .sim - button { pointer - events: none; } .sim - board, .sim - display, sim - button { fill: #111; } .sim - button - outer: hover { stroke: grey; stroke - width: 3px; } .sim - button - nut { fill:#704A4A; pointer - events: none; } .sim - button - nut: hover { stroke: 1px solid #704A4A; } .sim - pin: hover { stroke:#D4AF37; stroke - width: 2px; } .sim - pin - touch.touched: hover { stroke: darkorange; } .sim - led - back: hover { stroke:#a0a0a0; stroke - width: 3px; } .sim - led: hover { stroke:#ff7f7f; stroke - width: 3px; } .sim - systemled { fill:#333; stroke:#555; stroke - width: 1px; } .sim - light - level - button { stroke:#fff; stroke - width: 3px; } .sim - antenna { stroke:#555; stroke - width: 2px; } .sim - text { font - family: \"Lucida Console\", Monaco, monospace; font - size: 25px; fill:#fff; pointer - events: none; } .sim - text - pin { font - family: \"Lucida Console\", Monaco, monospace; font - size: 20px; fill:#fff; pointer - events: none; } .sim - thermometer { stroke:#aaa; stroke - width: 3px; } /* animations */ .sim - flash { animation - name: sim - flash - animation; animation - duration: 0.1s; } @keyframes sim - flash - animation { from { fill: yellow; } to { fill: default ; } } .sim - flash - stroke { animation - name: sim - flash - stroke - animation; animation - duration: 0.4s; animation - timing - function: ease-in; } @keyframes sim - flash - stroke - animation { from { stroke: yellow; } to { stroke: default ; } } /* wireframe */ .sim - wireframe * { fill: none; stroke: black; }.sim - wireframe.sim - display, .sim - wireframe.sim - led, .sim - wireframe.sim - led - back, .sim - wireframe.sim - head, .sim - wireframe.sim - theme, .sim - wireframe.sim - button - group, .sim - wireframe.sim - button - label, .sim - wireframe.sim - button, .sim - wireframe.sim - text - pin { visibility: hidden; } .sim - wireframe.sim - label { stroke: none; fill: #777; } .sim - label, .sim - button - label { fill: #000; } .sim - wireframe.sim - board { stroke - width: 2px; } *: focus { outline: none; } *: focus.sim - button - outer, .sim - pin: focus, .sim - thermometer: focus, .sim - shake: focus, .sim - light - level - button: focus { stroke: #4D90FE; stroke - width: 5px!important; } .no - drag, .sim - text, .sim - text - pin { user - drag: none; user - select: none; -moz - user - select: none; -webkit - user - drag: none; -webkit - user - select: none; -ms - user - select: none; } (0, 0)(1, 0)(2, 0)(3, 0)(4, 0)(0, 1)(1, 1)(2, 1)(3, 1)(4, 1)(0, 2)(1, 2)(2, 2)(3, 2)(4, 2)(0, 3)(1, 3)(2, 3)(3, 3)(4, 3)(0, 4)(1, 4)(2, 4)(3, 4)(4, 4)\n\nP0, ANALOG INP1, ANALOG INP2, ANALOG INP3, ANALOG IN, LED Col 1P4, ANALOG IN, LED Col 2P5, BUTTON AP6, LED Col 9P7, LED Col 8P8P9, LED Col 7P10, ANALOG IN, LED Col 3P11, BUTTON BP12, RESERVED ACCESSIBILITYP13, SPI - SCKP14, SPI - MISOP15, SPI - MOSIP16, SPI - Chip SelectP17, +3v3P18, +3v3P19, I2C - SCLP20, I2C - SDAGNDGND + 3v3GND\n\n\n\nSHAKE\nsvg.sim { box - sizing: border - box; width: 100 %; height: 100 %; display: block; } svg.sim.grayscale { -moz - filter: grayscale(1); -webkit - filter: grayscale(1); filter: grayscale(1); } .sim - button - group { cursor: pointer; } .sim - button { pointer - events: none; } .sim - board, .sim - display, sim - button { fill: #111; } .sim - button - outer: hover { stroke: grey; stroke - width: 3px; } .sim - button - nut { fill:#704A4A; pointer - events: none; } .sim - button - nut: hover { stroke: 1px solid #704A4A; } .sim - pin: hover { stroke:#D4AF37; stroke - width: 2px; } .sim - pin - touch.touched: hover { stroke: darkorange; } .sim - led - back: hover { stroke:#a0a0a0; stroke - width: 3px; } .sim - led: hover { stroke:#ff7f7f; stroke - width: 3px; } .sim - systemled { fill:#333; stroke:#555; stroke - width: 1px; } .sim - light - level - button { stroke:#fff; stroke - width: 3px; } .sim - antenna { stroke:#555; stroke - width: 2px; } .sim - text { font - family: \"Lucida Console\", Monaco, monospace; font - size: 25px; fill:#fff; pointer - events: none; } .sim - text - pin { font - family: \"Lucida Console\", Monaco, monospace; font - size: 20px; fill:#fff; pointer - events: none; } .sim - thermometer { stroke:#aaa; stroke - width: 3px; } /* animations */ .sim - flash { animation - name: sim - flash - animation; animation - duration: 0.1s; } @keyframes sim - flash - animation { from { fill: yellow; } to { fill: default ; } } .sim - flash - stroke { animation - name: sim - flash - stroke - animation; animation - duration: 0.4s; animation - timing - function: ease-in; } @keyframes sim - flash - stroke - animation { from { stroke: yellow; } to { stroke: default ; } } /* wireframe */ .sim - wireframe * { fill: none; stroke: black; }.sim - wireframe.sim - display, .sim - wireframe.sim - led, .sim - wireframe.sim - led - back, .sim - wireframe.sim - head, .sim - wireframe.sim - theme, .sim - wireframe.sim - button - group, .sim - wireframe.sim - button - label, .sim - wireframe.sim - button, .sim - wireframe.sim - text - pin { visibility: hidden; } .sim - wireframe.sim - label { stroke: none; fill: #777; } .sim - label, .sim - button - label { fill: #000; } .sim - wireframe.sim - board { stroke - width: 2px; } *: focus { outline: none; } *: focus.sim - button - outer, .sim - pin: focus, .sim - thermometer: focus, .sim - shake: focus, .sim - light - level - button: focus { stroke: #4D90FE; stroke - width: 5px!important; } .no - drag, .sim - text, .sim - text - pin { user - drag: none; user - select: none; -moz - user - select: none; -webkit - user - drag: none; -webkit - user - select: none; -ms - user - select: none; } (0, 0)(1, 0)(2, 0)(3, 0)(4, 0)(0, 1)(1, 1)(2, 1)(3, 1)(4, 1)(0, 2)(1, 2)(2, 2)(3, 2)(4, 2)(0, 3)(1, 3)(2, 3)(3, 3)(4, 3)(0, 4)(1, 4)(2, 4)(3, 4)(4, 4)\n\nP0, ANALOG INP1, ANALOG INP2, ANALOG INP3, ANALOG IN, LED Col 1P4, ANALOG IN, LED Col 2P5, BUTTON AP6, LED Col 9P7, LED Col 8P8P9, LED Col 7P10, ANALOG IN, LED Col 3P11, BUTTON BP12, RESERVED ACCESSIBILITYP13, SPI - SCKP14, SPI - MISOP15, SPI - MOSIP16, SPI - Chip SelectP17, +3v3P18, +3v3P19, I2C - SCLP20, I2C - SDAGNDGND + 3v3GND\n\n\n\nSHAKE\nJavaScript\n// shaking is mining...\ninput.onGesture(Gesture.Shake, () => {\n    led.stopAnimation()\n    basic.clearScreen()\n    basic.pause(200) // display a short pause\n    if (Math.randomRange(0, 2) == 0) { // 30% chances to add a transaction\n        // we found a coin!!!\n        blockchain.addBlock(1);\n        basic.showIcon(IconNames.Diamond);\n    } else {\n        // missed!\n        basic.showIcon(IconNames.Asleep);\n    }\n})\n\n// show my coins\ninput.onButtonPressed(Button.A, () => {\n    led.stopAnimation()\n    let coins = blockchain.valuesFrom(blockchain.id()).length;\n    basic.showNumber(coins);\n    basic.showString(\"COINS\");\n})\n\n// show the block chain size\ninput.onButtonPressed(Button.B, () => {\n    led.stopAnimation()\n    basic.showNumber(blockchain.length());\n    basic.showString(\"BLOCKS\");\n})\n\n// instructions on how to play\nbasic.showString(\"A=COINS B=CHAIN SHAKE=MINE\").forever(function () {\n\t\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"block coin wallet\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1752605750749}